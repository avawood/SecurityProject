#!/bin/bash

#Given a username and a csr (must be .csr.pem), will generate a TLS+encryption+signing certificate.
#If a certificate already exists for this user, it will be revoked and then recreated.
#The certificate will be saved to intermediate/certs/<username>.cert.pem, as well as filesystem/<username>/certificate.cert.pem
#run like ./make_client_cert starshine ../testing/starshine.csr.pem   
#assume that this is being run from within the server dir                                              
USERNAME="$1"; 
CSR="$2";

echo "the current user is " $USER
id -g $USER

pwd 
ls
cd CA

#first revoke the certificate, if it exists.
if test -f "intermediate/certs/${USERNAME}.cert.pem"; then
    echo "This user already has a certificate. We must revoke the old cert before making a new one."
    openssl ca -config intermediate/openssl.cnf \
        -revoke intermediate/certs/$USERNAME.cert.pem \
        -passin pass:intpassword
fi

echo "now going to sign the csr... "
#use the intermediate CA to sign the csr
#Will make a TLS+encryption+signing certificate
openssl ca -batch -config intermediate/openssl.cnf \
    -extensions usr_cert_signer -days 3750 -md sha256 \
    -in ../$CSR \
    -out intermediate/certs/$USERNAME.cert.pem \
    -passin pass:intpassword

chmod 777 intermediate/certs/$USERNAME.cert.pem

#verify the certificate
openssl x509 -noout -text \
      -in intermediate/certs/$USERNAME.cert.pem

openssl verify -CAfile intermediate/certs/ca-chain.cert.pem \
        intermediate/certs/$USERNAME.cert.pem

#copy the certificate into our filesystem for easy access
cp intermediate/certs/$USERNAME.cert.pem ../filesystem/$USERNAME/certificate.cert.pem